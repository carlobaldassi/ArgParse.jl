function _precompile_()
    ccall(:jl_generating_output, Cint, ()) == 1 || return nothing
    precompile(ArgParse.usage_string, (ArgParse.ArgParseSettings,))
    precompile(ArgParse.import_settings, (ArgParse.ArgParseSettings, ArgParse.ArgParseSettings, Bool,))
    precompile(ArgParse.override_duplicates, (Array{ArgParse.ArgParseField, 1}, ArgParse.ArgParseField,))
    precompile(ArgParse.parse1_optarg, (ArgParse.ParserState, ArgParse.ArgParseSettings, ArgParse.ArgParseField, Compat.UTF8String, Compat.UTF8String,))
    precompile(ArgParse.check_conflicts_with_commands, (ArgParse.ArgParseSettings, ArgParse.ArgParseField, Bool,))
    precompile(ArgParse.parse1_optarg, (ArgParse.ParserState, ArgParse.ArgParseSettings, ArgParse.ArgParseField, Void, Compat.UTF8String,))
    precompile(ArgParse.parse1_optarg, (ArgParse.ParserState, ArgParse.ArgParseSettings, ArgParse.ArgParseField, Void, Compat.ASCIIString,))
    precompile(ArgParse.parse1_optarg, (ArgParse.ParserState, ArgParse.ArgParseSettings, ArgParse.ArgParseField, Compat.ASCIIString, Compat.ASCIIString,))
    precompile(ArgParse.parse1_optarg, (ArgParse.ParserState, ArgParse.ArgParseSettings, ArgParse.ArgParseField, Compat.UTF8String, Compat.ASCIIString,))
    precompile(ArgParse.parse1_optarg, (ArgParse.ParserState, ArgParse.ArgParseSettings, ArgParse.ArgParseField, Compat.ASCIIString, Compat.UTF8String,))
    precompile(ArgParse.parse_short_opt, (ArgParse.ParserState, ArgParse.ArgParseSettings,))
    precompile(ArgParse.parse_args_unhandled, (Array{Compat.ASCIIString, 1}, ArgParse.ArgParseSettings, Bool,))
    precompile(ArgParse.parse_args_unhandled, (Array{Any, 1}, ArgParse.ArgParseSettings, Bool,))
    precompile(ArgParse.parse_args_unhandled, (Array{Compat.UTF8String, 1}, ArgParse.ArgParseSettings, Bool,))
    precompile(ArgParse.check_for_duplicates, (Array{ArgParse.ArgParseField, 1}, ArgParse.ArgParseField,))
    precompile(ArgParse.merge_commands, (Array{ArgParse.ArgParseField, 1}, Array{ArgParse.ArgParseField, 1},))
    precompile(ArgParse.preparse, (ArgParse.ParserState, ArgParse.ArgParseSettings,))
    precompile(ArgParse.gen_help_text, (ArgParse.ArgParseField, ArgParse.ArgParseSettings,))
    precompile(ArgParse.check_short_opt_name, (Compat.UTF8String, ArgParse.ArgParseSettings,))
    precompile(ArgParse.parse_long_opt, (ArgParse.ParserState, ArgParse.ArgParseSettings,))
    precompile(ArgParse.convert_to_symbols, (Base.Dict{AbstractString, Any},))
    precompile(ArgParse.check_settings_can_use_symbols, (ArgParse.ArgParseSettings,))
    precompile(ArgParse.check_name_format, (Array{Compat.ASCIIString, 1},))
    precompile(ArgParse.check_settings_are_compatible, (ArgParse.ArgParseSettings, ArgParse.ArgParseSettings,))
    precompile(ArgParse.check_short_opt_name, (Compat.ASCIIString, ArgParse.ArgParseSettings,))
    precompile(ArgParse.print_group, (Base.AbstractIOBuffer{Array{UInt8, 1}}, Array{Any, 1}, Compat.ASCIIString, Int64, Int64, Compat.ASCIIString, Compat.ASCIIString, Compat.ASCIIString,))
    precompile(ArgParse.check_range_default_multi2, (Array{Any, 1}, Function,))
    precompile(ArgParse.name_to_fieldnames, (Array{Compat.ASCIIString, 1}, ArgParse.ArgParseSettings,))
    precompile(ArgParse.parse_args, (Array{Any, 1}, Array{Compat.ASCIIString, 1}, ArgParse.ArgParseSettings,))
    precompile(ArgParse.add_command, (ArgParse.ArgParseSettings, Compat.ASCIIString, Compat.ASCIIString, Bool,))
    precompile(ArgParse.looks_like_an_option, (Compat.ASCIIString, ArgParse.ArgParseSettings,))
    precompile(ArgParse.parse1_flag, (ArgParse.ParserState, ArgParse.ArgParseSettings, ArgParse.ArgParseField, Bool, Compat.ASCIIString,))
    precompile(ArgParse.check_range_default_multi2, (Array{Array{Int64, 1}, 1}, Function,))
    precompile(ArgParse.show_help, (Array{Any, 1}, Base.AbstractIOBuffer{Array{UInt8, 1}}, ArgParse.ArgParseSettings,))
    precompile(ArgParse.show_version, (Array{Any, 1}, Base.AbstractIOBuffer{Array{UInt8, 1}}, ArgParse.ArgParseSettings,))
    precompile(ArgParse.parse_arg, (ArgParse.ParserState, ArgParse.ArgParseSettings,))
    precompile(ArgParse.name_to_fieldnames, (Array{Compat.UTF8String, 1}, ArgParse.ArgParseSettings,))
    precompile(ArgParse.check_arg_name, (Compat.UTF8String,))
    precompile(ArgParse.check_name_format, (Compat.UTF8String,))
    precompile(ArgParse.looks_like_an_option, (Compat.UTF8String, ArgParse.ArgParseSettings,))
    precompile(ArgParse.check_long_opt_name, (Compat.UTF8String, ArgParse.ArgParseSettings,))
    precompile(ArgParse.check_range_default_multi, (Array{Int64, 1}, Function,))
    precompile(ArgParse.parse1_flag, (ArgParse.ParserState, ArgParse.ArgParseSettings, ArgParse.ArgParseField, Bool, Compat.UTF8String,))
    precompile(ArgParse.check_range_default_multi, (Array{Float64, 1}, Function,))
    precompile(ArgParse.get_group, (Compat.ASCIIString, ArgParse.ArgParseField, ArgParse.ArgParseSettings,))
    precompile(ArgParse.set_default_arg_group, (ArgParse.ArgParseSettings, Compat.ASCIIString,))
    precompile(ArgParse.check_long_opt_name, (Compat.ASCIIString, ArgParse.ArgParseSettings,))
    precompile(ArgParse.override_conflicts_with_commands, (ArgParse.ArgParseSettings, Compat.ASCIIString,))
    precompile(ArgParse.name_to_fieldnames, (Compat.ASCIIString, ArgParse.ArgParseSettings,))
    precompile(ArgParse.check_range_default_multi, (Array{Any, 1}, Function,))
    precompile(ArgParse.check_arg_makes_sense, (ArgParse.ArgParseSettings, ArgParse.ArgParseField,))
    precompile(ArgParse.check_name_format, (Compat.ASCIIString,))
    precompile(ArgParse.check_name_format, (Array{Compat.UTF8String, 1},))
    precompile(ArgParse.add_arg_field, (Array{Any, 1}, ArgParse.ArgParseSettings, Array{Compat.ASCIIString, 1},))
    precompile(ArgParse.test_required_args, (ArgParse.ArgParseSettings, Base.Set{AbstractString},))
    precompile(ArgParse.add_arg_field, (Array{Any, 1}, ArgParse.ArgParseSettings, Compat.ASCIIString,))
    precompile(ArgParse.check_metavar, (Compat.UTF8String,))
    precompile(ArgParse.check_metavar, (Compat.ASCIIString,))
    precompile(ArgParse.parse_command_args, (ArgParse.ParserState, ArgParse.ArgParseSettings,))
    precompile(ArgParse.add_arg_field, (Array{Any, 1}, ArgParse.ArgParseSettings, Array{Compat.UTF8String, 1},))
    precompile(ArgParse.add_arg_field, (Array{Any, 1}, ArgParse.ArgParseSettings, Compat.UTF8String,))
    precompile(ArgParse.name_to_fieldnames, (Compat.UTF8String, ArgParse.ArgParseSettings,))
    precompile(ArgParse.check_nargs_and_action, (ArgParse.ArgConsumerType, Symbol,))
    precompile(ArgParse.auto_dest_name, (Compat.ASCIIString, Array{AbstractString, 1}, Array{AbstractString, 1}, Bool,))
    precompile(ArgParse.check_range_default, (Compat.ASCIIString, Function,))
    precompile(ArgParse.warn_extra_opts, (Array{Symbol, 1}, Array{Symbol, 1},))
    precompile(ArgParse.fix_commands_fields, (Array{ArgParse.ArgParseField, 1},))
    precompile(ArgParse.check_range_default, (Int64, Function,))
    precompile(ArgParse.check_range_default, (Float64, Function,))
    precompile(ArgParse.check_conflicts_with_commands, (ArgParse.ArgParseSettings, Compat.ASCIIString,))
    precompile(ArgParse.check_range_default, (Array{Int64, 1}, Function,))
    precompile(ArgParse.has_cmd, (ArgParse.ArgParseSettings,))
    precompile(ArgParse.get_cmd_prog_hint, (ArgParse.ArgParseField,))
    precompile(ArgParse.check_group_name, (Compat.ASCIIString,))
    precompile(ArgParse.test_range, (Function, Compat.ASCIIString, Compat.UTF8String,))
    precompile(ArgParse.test_range, (Function, Float64, Compat.ASCIIString,))
    precompile(ArgParse.test_range, (Function, Compat.UTF8String, Compat.UTF8String,))
    precompile(ArgParse.test_range, (Function, Compat.ASCIIString, Compat.ASCIIString,))
    precompile(ArgParse.test_range, (Function, Int64, Compat.ASCIIString,))
    precompile(ArgParse.test_range, (Function, Compat.UTF8String, Compat.ASCIIString,))
    precompile(ArgParse.test_range, (Function, Int64, Compat.UTF8String,))
    precompile(ArgParse.parse_item, (Type{Array{Int64, 1}}, Compat.ASCIIString,))
    precompile(ArgParse.test_range, (Function, Array{Int64, 1}, Compat.ASCIIString,))
    precompile(ArgParse.parse_item, (Type{Float64}, Compat.ASCIIString,))
    precompile(ArgParse.check_dest_name, (Compat.ASCIIString,))
    precompile(ArgParse.is_arg, (ArgParse.ArgParseField,))
    precompile(ArgParse.idstring, (ArgParse.ArgParseField,))
    precompile(ArgParse.check_arg_name, (Compat.ASCIIString,))
    precompile(ArgParse.is_multi_nargs, (ArgParse.ArgConsumerType,))
    precompile(ArgParse.parse_item, (Type{Int64}, Compat.ASCIIString,))
    precompile(ArgParse._add_arg_group, (ArgParse.ArgParseSettings, Compat.ASCIIString, Compat.ASCIIString, Bool,))
    precompile(ArgParse.getindex, (ArgParse.ArgParseSettings, Compat.ASCIIString,))
    precompile(ArgParse.check_action_is_valid, (Symbol,))
    precompile(ArgParse.println_unnbsp, (Base.AbstractIOBuffer{Array{UInt8, 1}}, Compat.UTF8String, Vararg{Compat.UTF8String},))
    precompile(ArgParse.println_unnbsp, (Base.AbstractIOBuffer{Array{UInt8, 1}}, Compat.ASCIIString, Vararg{Compat.ASCIIString},))
    precompile(ArgParse.argparse_error, (Compat.UTF8String, Vararg{Any},))
    precompile(ArgParse.auto_metavar, (Compat.ASCIIString, Bool,))
    precompile(ArgParse.is_flag_action, (Symbol,))
    precompile(ArgParse.is_command_action, (Symbol,))
    precompile(ArgParse.add_arg_group, (ArgParse.ArgParseSettings, Compat.ASCIIString,))
    precompile(ArgParse.argparse_error, (Compat.UTF8String, Vararg{Compat.UTF8String},))
    precompile(ArgParse.haskey, (ArgParse.ArgParseSettings, Compat.ASCIIString,))
    precompile(ArgParse.argparse_error, (Compat.ASCIIString, Vararg{Compat.ASCIIString},))
    precompile(ArgParse.default_action, (ArgParse.ArgConsumerType,))
    precompile(ArgParse.debug_handler, (ArgParse.ArgParseSettings, ArgParse.ArgParseError,))
    precompile(ArgParse.setindex!, (ArgParse.ArgParseSettings, ArgParse.ArgParseSettings, Compat.ASCIIString,))
    precompile(ArgParse.get_group_name, (Compat.ASCIIString, ArgParse.ArgParseField, ArgParse.ArgParseSettings,))
    precompile(ArgParse.add_arg_field, (ArgParse.ArgParseSettings, Compat.ASCIIString,))
    precompile(ArgParse.add_arg_field, (ArgParse.ArgParseSettings, Array{Compat.ASCIIString, 1},))
    precompile(ArgParse.add_arg_group, (ArgParse.ArgParseSettings, Compat.ASCIIString, Compat.ASCIIString,))
    precompile(ArgParse.default_action, (Int64,))
    precompile(ArgParse.default_action, (Char,))
    precompile(ArgParse.parse_item, (Type{Any}, Compat.UTF8String,))
    precompile(ArgParse.check_range_default_multi2, (Void, Function,))
    precompile(ArgParse.check_range_default_multi, (Void, Function,))
    precompile(ArgParse.check_range_default, (Void, Function,))
    precompile(ArgParse.parse_item, (Type{AbstractString}, Compat.UTF8String,))
    precompile(ArgParse.parse_item, (Type{Any}, Compat.ASCIIString,))
    precompile(ArgParse.default_action, (Symbol,))
    precompile(ArgParse.parse_item, (Type{AbstractString}, Compat.ASCIIString,))
    precompile(ArgParse.import_settings, (ArgParse.ArgParseSettings, ArgParse.ArgParseSettings,))
    precompile(ArgParse.parse_args, (Array{Compat.ASCIIString, 1}, ArgParse.ArgParseSettings,))
    precompile(ArgParse.parse_args, (Array{Compat.UTF8String, 1}, ArgParse.ArgParseSettings,))
    precompile(ArgParse.parse_args, (Array{Any, 1}, ArgParse.ArgParseSettings,))
    precompile(ArgParse.set_default_arg_group, (ArgParse.ArgParseSettings,))
    if VERSION < v"0.5"
      precompile(ArgParse.call, (Array{Any, 1}, Type{ArgParse.ArgParseSettings},))
      precompile(ArgParse.call, (Type{ArgParse.ParserState}, Array{Compat.ASCIIString, 1}, ArgParse.ArgParseSettings, Bool,))
      precompile(ArgParse.call, (Type{ArgParse.ParserState}, Array{Compat.UTF8String, 1}, ArgParse.ArgParseSettings, Bool,))
      precompile(ArgParse.call, (Type{ArgParse.ParserState}, Array{Any, 1}, ArgParse.ArgParseSettings, Bool,))
      precompile(ArgParse.call, (Array{Any, 1}, Type{ArgParse.ArgParseSettings}, Compat.ASCIIString, Bool,))
      precompile(ArgParse.call, (Type{ArgParse.ArgParseSettings},))
      precompile(ArgParse.call, (Array{Any, 1}, Type{ArgParse.ArgParseSettings}, Compat.ASCIIString,))
      precompile(ArgParse.call, (Type{ArgParse.ArgParseTable},))
      precompile(ArgParse.call, (Type{ArgParse.ArgConsumerType}, Symbol,))
      precompile(ArgParse.call, (Type{ArgParse.ArgConsumerType}, Int64,))
      precompile(ArgParse.call, (Type{ArgParse.ArgConsumerType}, Char,))
      precompile(ArgParse.call, (Type{ArgParse.ArgParseError}, Compat.UTF8String,))
    else
      precompile(Array{Any, 1}, (Type{ArgParse.ArgParseSettings},))
      precompile(Type{ArgParse.ParserState}, (Array{Compat.ASCIIString, 1}, ArgParse.ArgParseSettings, Bool,))
      precompile(Type{ArgParse.ParserState}, (Array{Compat.UTF8String, 1}, ArgParse.ArgParseSettings, Bool,))
      precompile(Type{ArgParse.ParserState}, (Array{Any, 1}, ArgParse.ArgParseSettings, Bool,))
      precompile(Array{Any, 1}, (Type{ArgParse.ArgParseSettings}, Compat.ASCIIString, Bool,))
      precompile(Type{ArgParse.ArgParseSettings},())
      precompile(Array{Any, 1}, (Type{ArgParse.ArgParseSettings}, Compat.ASCIIString,))
      precompile(Type{ArgParse.ArgParseTable},())
      precompile(Type{ArgParse.ArgConsumerType}, (Symbol,))
      precompile(Type{ArgParse.ArgConsumerType}, (Int64,))
      precompile(Type{ArgParse.ArgConsumerType}, (Char,))
      precompile(Type{ArgParse.ArgParseError}, (Compat.UTF8String,))
    end
end
